import os, subprocess, time, pathlib, signal, pytest
from playwright.sync_api import sync_playwright

PORT = 8520
EXPORT_DIR = pathlib.Path("exports")
EXPORT_DIR.mkdir(parents=True, exist_ok=True)

@pytest.fixture(scope="session")
def app_proc():
    env = os.environ.copy()
    env["TI_PORT"] = str(PORT)
    env["TI_AUTO_EXPORT"] = "1"
    proc = subprocess.Popen(
        [sys.executable, "-m", "streamlit", "run", "dash/app.py", "--server.port", str(PORT), "--server.headless", "true"],
        env=env,
        stdout=subprocess.PIPE, stderr=subprocess.STDOUT
    )
    time.sleep(5)  # allow startup
    yield proc
    try:
        proc.send_signal(signal.SIGTERM)
        proc.wait(timeout=5)
    except Exception:
        proc.kill()

@pytest.mark.e2e
def test_playwright_real_ui(app_proc):
    with sync_playwright() as p:
        browser = p.chromium.launch(headless=True)
        page = browser.new_page()
        page.goto(f"http://localhost:{PORT}")
        # Replace with actual selector IDs/names from your Streamlit app
        page.fill("input[type='text']", "playwright search")
        page.click("button:has-text('Search')")
        time.sleep(3)  # wait for processing
        exports = list(EXPORT_DIR.glob("*.csv")) + list(EXPORT_DIR.glob("*.json"))
        assert exports, "No exports generated by Playwright flow"
        browser.close()

name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
permissions:
  contents: read
  pull-requests: read
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-${{ matrix.python-version }}-
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
      - name: Optional deps
        run: |
          [ -f requirements-optional.txt ] && pip install -r requirements-optional.txt || true
      - name: Lint
        run: |
          pip install ruff || true
          ruff check . || true
      - name: Run tests with coverage
        run: |
          pytest -q --cov=. --cov-report=term-missing --cov-report=xml --cov-fail-under=${{ env.COVERAGE_MIN || 35 }}
      - name: Generate HTML report
        run: coverage html
      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov
          retention-days: 7
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: py-${{ matrix.python-version }},unit
          fail_ci_if_error: true
          verbose: true

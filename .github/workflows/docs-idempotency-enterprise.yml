name: Docs Idempotency (Enterprise)

on:
  pull_request:
  push:
    branches: [ main ]
    tags: [ "v*" ]
  schedule:
    - cron: "17 3 * * *"
  issue_comment:
    types: [created]

concurrency:
  group: docs-idempotency-${{ github.ref }}
  cancel-in-progress: true

jobs:
  decide-matrix:
    name: Decide matrix
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      matrix_json: ${{ steps.detect.outputs.matrix_json }}
      reason: ${{ steps.detect.outputs.reason }}
    steps:
      - name: Detect label/comment for matrix
        id: detect
        uses: actions/github-script@v7
        with:
          script: |
            const core = require('@actions/core');
            const event = context.eventName;
            let enable = false;
            let reason = 'default-single';
            async function labelsEnable(prNumber) {
              const {data: pr} = await github.rest.pulls.get({ owner: context.repo.owner, repo: context.repo.repo, pull_number: prNumber });
              const labels = (pr.labels || []).map(l => l.name);
              return labels.includes('test-matrix');
            }
            if (event === 'pull_request') {
              const labels = (context.payload.pull_request.labels || []).map(l => l.name);
              enable = labels.includes('test-matrix');
              reason = enable ? 'label: test-matrix' : reason;
            } else if (event === 'issue_comment' && context.payload.issue?.pull_request) {
              const body = (context.payload.comment?.body || '').trim();
              if (body.startsWith('/test-matrix')) { enable = true; reason = 'comment: /test-matrix'; }
              const prNumber = context.payload.issue.number;
              if (!enable && await labelsEnable(prNumber)) { enable = true; reason = 'label: test-matrix'; }
            }
            const matrix = enable ? { python: ["3.10","3.11","3.12"] } : { python: ["3.x"] };
            core.setOutput('matrix_json', JSON.stringify(matrix));
            core.setOutput('reason', reason);

  docs-idempotency:
    name: Docs Idempotency
    runs-on: ubuntu-latest
    needs: decide-matrix
    timeout-minutes: 20
    permissions:
      contents: read
      actions: write
      checks: write
      id-token: write
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.decide-matrix.outputs.matrix_json) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'

      - name: Install generators (best-effort)
        run: |
          pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt || true; fi
          pip install sphinx mkdocs mkdocs-material || true

      - name: Run STRICT idempotency check
        shell: bash
        run: |
          echo "Matrix mode: ${{ needs.decide-matrix.outputs.reason }}"
          chmod +x scripts/cursor_docs_strict.sh || true
          git config user.email "ci-bot@example.com"
          git config user.name "ci-bot"
          set +e
          ./scripts/cursor_docs_strict.sh
          RC=$?
          set -e
          if [ $RC -ne 0 ]; then
            echo "Preparing diff artifact..."
            test -f docs_idempotency.diff || git --no-pager diff > docs_idempotency.diff || true
          fi
          exit $RC

      - name: Upload diff (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: docs_idempotency_diff-${{ matrix.python }}
          path: docs_idempotency.diff
          retention-days: 10
